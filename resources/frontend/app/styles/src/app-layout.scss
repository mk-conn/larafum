@keyframes width-to-full {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

$header-height: 4em;

@mixin overflow-scroll() {
  overflow-y: scroll; /* has to be scroll, not auto */
  -webkit-overflow-scrolling: touch;
  overflow-x: hidden;
}

@mixin absolute-position() {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

html, body {
  margin: 0;
  padding: 0;
}

body {
  background-color: #000;
  font-family: "Open Sans Regular", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
  margin: 0;
  padding: 0;
  height: 100vh;
  width: 100vw;
  overflow: hidden;
  color: #eee;
  font-size: 14px;
  -webkit-font-smoothing: antialiased;
  // mobile //

  > div.application {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    display: flex;
    flex-direction: column;
    background: #ccc;
    height: inherit;
    z-index: 0;

    .background-container {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: -1;
      -webkit-transform: translateZ(0);
      -ms-transform: translateZ(0);
      -o-transform: translateZ(0);
      transform: translateZ(0);

    }

    #content {
      position: relative;
      flex-grow: 1;

      .fullpage-column-container {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        overflow: hidden;
        display: flex;
        flex-direction: row;
        height: inherit;
        width: inherit;
      }
    }

    #side-bar, #column-one, #column-two, #fullpage-content {
      width: 0;
      @include absolute-position;
      @include overflow-scroll;
      display: flex;
      flex-direction: column;

      &.enabled {
        width: 100%;
      }
    }

    #fullpage-content {
      z-index: 4;

      &.enabled {
        background: rgba(50, 50, 50, .9);
        padding: 1rem;
      }
    }

    .custom-select {
      //background: none;
    }
  }
}

@include media-breakpoint-up(sm) {
  $sidebar: 40% !important;
  $col1: 60% !important;
  $col2: 0% !important;

  #column-one, #column-two {
    border-left: 1px solid $color2;
  }

  #side-bar, #column-one, #column-two {
    position: relative !important;
  }

  #side-bar {
    width: $sidebar;

    &.enabled {
      width: $sidebar;
    }
  }
  #column-one {
    width: 0;

    &.enabled {
      width: $col1;
    }
  }
  #column-two {
    width: 0;

    &.enabled {
      width: $col1;
    }
  }

}

@include media-breakpoint-between(md, lg) {
  $sidebar: 35% !important;
  $col1: 65% !important;
  $col2: 0% !important;

  #side-bar {
    width: $sidebar;

    &.enabled {
      width: $sidebar;
    }
  }
  #column-one {
    width: $col1;

    &.enabled {
      width: $col1;
    }
  }
  #column-two {
    width: $col2;

    &.enabled {
      width: 55% !important;
      position: absolute !important;
      right: 0;
      left: auto !important;
      background: #555;
      top: 0;
    }
  }
}

@include media-breakpoint-up(lg) {
  $sidebar: 30% !important;
  $col1: 30% !important;
  $col2: 50% !important;

  #side-bar {
    width: $sidebar;

    &.enabled {
      width: $sidebar;
    }
  }
  #column-one {
    width: $col1;

    &.enabled {
      width: $col1;
    }
  }
  #column-two {
    width: $col2;

    &.enabled {
      width: $col2;
    }
  }
}

img {
  max-width: 100%;
}

.blur {
  /* All the background image supports */
  transform: translate(0px, 0px);
  background-image: -webkit-linear-gradient(bottom left, rgba(43, 40, 50, .9) 0%, rgba(83, 86, 99, .9) 45%, rgba(69, 77, 91, .7) 60%);
  background-image: -moz-linear-gradient(bottom left, rgba(43, 40, 50, .9) 0%, rgba(83, 86, 99, .9) 45%, rgba(69, 77, 91, .7) 60%);
  background-image: -o-linear-gradient(bottom left, rgba(43, 40, 50, .9) 0%, rgba(83, 86, 99, .9) 45%, rgba(69, 77, 91, .7) 60%);
  background-image: linear-gradient(to top right, rgba(43, 40, 50, .9) 0%, rgba(83, 86, 99, .9) 45%, rgba(69, 77, 91, .7) 60%);
  position: absolute;
  width: 100%;
  height: 100%;

  /* blur filters */
  -webkit-filter: blur(20px);
  -o-filter: blur(20px);
  filter: blur(20px);

  /* positioning and removing edges */
  top: -70px;
  right: -70px;
  left: -70px;
  padding: 70px;
}

.blur:after {
  content: '';
  position: absolute;
  height: 100%;
  width: 100%;
  z-index: 1001;

  /* Setting the gradient. Adds depth, and glass like effect. */
  background-image: -webkit-linear-gradient(289deg, rgba(20, 40, 50, .9) 0%, rgba(20, 40, 50, .7) 46%, rgba(0, 0, 0, 0.5) 50%);
  background-image: -moz-linear-gradient(289deg, rgba(20, 40, 50, .9) 0%, rgba(20, 40, 50, .7) 46%, rgba(0, 0, 0, 0.5) 50%);
  background-image: -o-linear-gradient(289deg, rgba(20, 40, 50, .9) 0%, rgba(20, 40, 50, .7) 46%, rgba(0, 0, 0, 0.5) 50%);
  background-image: linear-gradient(-19deg, rgba(20, 40, 50, .9) 0%, rgba(20, 40, 50, .7) 46%, rgba(0, 0, 0, 0.5) 50%);

  /* Blur to add depth. High to create smooth transition */
  -webkit-filter: blur(70px);
  -o-filter: blur(70px);
  filter: blur(70px);
}

a:link, a:visited {
  color: $color3;
  text-decoration: none;

  &:hover {
    color: $orange;
  }
}


.scroll-top {
  display: none;
  position: fixed;
  bottom: 20px;
  right: 30px;
  z-index: 99;
}

.scroll-top:hover {
  background-color: #555; /* Add a dark-grey background on hover */
}

.btn {
  &.btn-link {
    color: #eee;
  }

  &.round {
    border-radius: 50%;
  }
}

.loader {
  padding: 1rem;
  text-align: center;
}

[data-ember-action], a, button, input, .link {
  cursor: pointer;
}

.list-group {
  display: flex;
  flex-direction: column;

  .list-group-item {
    position: relative;
    display: block;
    border: $list-group-border-width solid $list-group-border-color;
  }
}

// take from bootstrap
$spacer: 1rem !default;
$spacers: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$spacers: map-merge(
    (
      0: 0,
      1: ($spacer * .25),
      2: ($spacer * .5),
      3: $spacer,
      4: ($spacer * 1.5),
      5: ($spacer * 3)
    ),
    $spacers
);


// Negative margins (e.g., where `.mb-n1` is negative version of `.mb-1`)
@each $size, $length in $spacers {
  @if $size != 0 {
    .m#-n#{$size} {
      margin: -$length !important;
    }
    .mt#-n#{$size},
    .my#-n#{$size} {
      margin-top: -$length !important;
    }
    .mr#-n#{$size},
    .mx#-n#{$size} {
      margin-right: -$length !important;
    }
    .mb#-n#{$size},
    .my#-n#{$size} {
      margin-bottom: -$length !important;
    }
    .ml#-n#{$size},
    .mx#-n#{$size} {
      margin-left: -$length !important;
    }
  }
}

.float {
  &.right {
    float: right
  }
}

.img-fluid {
  // Part 1: Set a maximum relative to the parent
  max-width: 100% !important;
  // Part 2: Override the height to auto, otherwise images will be stretched
  // when setting a width and height attribute on the img element.
  height: auto;
}
